<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[JVM虚拟机关于“不使用的对象手动赋值为null”的理解]]></title>
      <url>http://justdoitlee.github.io/2017/02/18/JVM%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%85%B3%E4%BA%8E%E2%80%9C%E4%B8%8D%E4%BD%BF%E7%94%A8%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%89%8B%E5%8A%A8%E8%B5%8B%E5%80%BC%E4%B8%BAnull%E2%80%9D%E7%9A%84%E7%90%86%E8%A7%A3/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>今天逛博客,看到了一个关于<font color="blue">一个对象有没有必要手动赋值为null</font>的问题，捋了捋思路，决定写个测试代码来实践一下。<br><a id="more"></a><br><br><br>百说不如一用，直接上代码:<br><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test1</span> &#123;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">		<span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">64</span> * <span class="number">1024</span> * <span class="number">1024</span>];<span class="comment">//作用就是向内存中填充一个10MB的对象</span></div><div class="line">		System.gc();<span class="comment">//手动执行GC操作</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>运行程序前，可以将JVM参数设置为如下:<br><br>-verbose:gc<br><br>-XX:+PrintGCDetails<br><br>控制台部分输出结果如下:<br><br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[<span class="name">GC</span> (<span class="name">System.gc</span>()) [<span class="name">PSYoungGen:</span> <span class="number">3932</span>K-&gt;744K(<span class="name">76288K</span>)] <span class="number">69468</span>K-&gt;66288K(<span class="name">251392K</span>), <span class="number">0.0016500</span> secs] [<span class="name">Times:</span> user=0.00 sys=0.03, real=0.00 secs] </div><div class="line">[<span class="name">Full</span> GC (<span class="name">System.gc</span>()) [<span class="name">PSYoungGen:</span> <span class="number">744</span>K-&gt;0K(<span class="name">76288K</span>)] [<span class="name">ParOldGen:</span> <span class="number">65544</span>K-&gt;66145K(<span class="name">175104K</span>)] <span class="number">66288</span>K-&gt;66145K(<span class="name">251392K</span>), [<span class="name">Metaspace:</span> <span class="number">3169</span>K-&gt;3169K(<span class="name">1056768K</span>)], <span class="number">0.0101306</span> secs] [<span class="name">Times:</span> user=0.00 sys=0.00, real=0.01 secs]</div></pre></td></tr></table></figure></p>
<p>根据ParOldGen: 65544K-&gt;66145K(175104K)可以看出，bytes对象并没有因为没有使用而被gc回收。<br><br><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test2</span> &#123;</div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * -verbose:GC</div><div class="line">	 * -XX:+PrintGCDetails</div><div class="line">	 * @param args</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">		&#123;</div><div class="line">	           <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">64</span> * <span class="number">1024</span> * <span class="number">1024</span>];</div><div class="line">		&#125;</div><div class="line">		System.gc();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>控制台输出结果如下:<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[GC (System.gc()) [PSYoungGen: <span class="number">3932</span><span class="keyword">K</span>-&gt;<span class="number">776</span><span class="keyword">K</span>(<span class="number">76288</span><span class="keyword">K</span>)] <span class="number">69468</span><span class="keyword">K</span>-&gt;<span class="number">66320</span><span class="keyword">K</span>(<span class="number">251392</span><span class="keyword">K</span>), <span class="number">0.0013737</span> secs] [<span class="keyword">Times</span>: user=<span class="number">0.00</span> sys=<span class="number">0.00</span>, real=<span class="number">0.00</span> secs] </div><div class="line">[<span class="keyword">Full</span> GC (System.gc()) [PSYoungGen: <span class="number">776</span><span class="keyword">K</span>-&gt;<span class="number">0</span><span class="keyword">K</span>(<span class="number">76288</span><span class="keyword">K</span>)] [ParOldGen: <span class="number">65544</span><span class="keyword">K</span>-&gt;<span class="number">66145</span><span class="keyword">K</span>(<span class="number">175104</span><span class="keyword">K</span>)] <span class="number">66320</span><span class="keyword">K</span>-&gt;<span class="number">66145</span><span class="keyword">K</span>(<span class="number">251392</span><span class="keyword">K</span>), [Metaspace: <span class="number">3169</span><span class="keyword">K</span>-&gt;<span class="number">3169</span><span class="keyword">K</span>(<span class="number">1056768</span><span class="keyword">K</span>)], <span class="number">0.0063873</span> secs] [<span class="keyword">Times</span>: user=<span class="number">0.00</span> sys=<span class="number">0.00</span>, real=<span class="number">0.01</span> secs] </div><div class="line">Heap</div><div class="line"> PSYoungGen      total <span class="number">76288</span><span class="keyword">K</span>, used <span class="number">655</span><span class="keyword">K</span> [<span class="number">0x000000076b500000</span>, <span class="number">0x0000000770a00000</span>, <span class="number">0x00000007c0000000</span>)</div><div class="line">  eden space <span class="number">65536</span><span class="keyword">K</span>, <span class="number">1</span>% used [<span class="number">0x000000076b500000</span>,<span class="number">0x000000076b5a3ee8</span>,<span class="number">0x000000076f500000</span>)</div><div class="line">  from space <span class="number">10752</span><span class="keyword">K</span>, <span class="number">0</span>% used [<span class="number">0x000000076f500000</span>,<span class="number">0x000000076f500000</span>,<span class="number">0x000000076ff80000</span>)</div><div class="line">  to   space <span class="number">10752</span><span class="keyword">K</span>, <span class="number">0</span>% used [<span class="number">0x000000076ff80000</span>,<span class="number">0x000000076ff80000</span>,<span class="number">0x0000000770a00000</span>)</div><div class="line"> ParOldGen       total <span class="number">175104</span><span class="keyword">K</span>, used <span class="number">66145</span><span class="keyword">K</span> [<span class="number">0x00000006c1e00000</span>, <span class="number">0x00000006cc900000</span>, <span class="number">0x000000076b500000</span>)</div><div class="line">  object space <span class="number">175104</span><span class="keyword">K</span>, <span class="number">37</span>% used [<span class="number">0x00000006c1e00000</span>,<span class="number">0x00000006c5e987b8</span>,<span class="number">0x00000006cc900000</span>)</div><div class="line"> Metaspace       used <span class="number">3176</span><span class="keyword">K</span>, capacity <span class="number">4494</span><span class="keyword">K</span>, committed <span class="number">4864</span><span class="keyword">K</span>, reserved <span class="number">1056768</span><span class="keyword">K</span></div><div class="line">  class space    used <span class="number">346</span><span class="keyword">K</span>, capacity <span class="number">386</span><span class="keyword">K</span>, committed <span class="number">512</span><span class="keyword">K</span>, reserved <span class="number">1048576</span><span class="keyword">K</span></div></pre></td></tr></table></figure></p>
<p>可以看出，根据gc日志[ParOldGen: 65544K-&gt;66145K(175104K)] ，gc依然没有回收bytes对象，哪怕已经不在方法区了，我们再次修改代码。<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test3</span> &#123;</div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * -verbose:GC</div><div class="line">	 * -XX:+PrintGCDetails</div><div class="line">	 * @param args</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">64</span> * <span class="number">1024</span> * <span class="number">1024</span>];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">int</span> i = <span class="number">1</span>;</div><div class="line">		System.gc();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>gc日志输出如下:<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[GC (System.gc()) [PSYoungGen: <span class="number">3932</span><span class="keyword">K</span>-&gt;<span class="number">776</span><span class="keyword">K</span>(<span class="number">76288</span><span class="keyword">K</span>)] <span class="number">69468</span><span class="keyword">K</span>-&gt;<span class="number">66320</span><span class="keyword">K</span>(<span class="number">251392</span><span class="keyword">K</span>), <span class="number">0.0014193</span> secs] [<span class="keyword">Times</span>: user=<span class="number">0.00</span> sys=<span class="number">0.00</span>, real=<span class="number">0.00</span> secs] </div><div class="line">[<span class="keyword">Full</span> GC (System.gc()) [PSYoungGen: <span class="number">776</span><span class="keyword">K</span>-&gt;<span class="number">0</span><span class="keyword">K</span>(<span class="number">76288</span><span class="keyword">K</span>)] [ParOldGen: <span class="number">65544</span><span class="keyword">K</span>-&gt;<span class="number">609</span><span class="keyword">K</span>(<span class="number">175104</span><span class="keyword">K</span>)] <span class="number">66320</span><span class="keyword">K</span>-&gt;<span class="number">609</span><span class="keyword">K</span>(<span class="number">251392</span><span class="keyword">K</span>), [Metaspace: <span class="number">3169</span><span class="keyword">K</span>-&gt;<span class="number">3169</span><span class="keyword">K</span>(<span class="number">1056768</span><span class="keyword">K</span>)], <span class="number">0.0076485</span> secs] [<span class="keyword">Times</span>: user=<span class="number">0.02</span> sys=<span class="number">0.00</span>, real=<span class="number">0.01</span> secs] </div><div class="line">Heap</div><div class="line"> PSYoungGen      total <span class="number">76288</span><span class="keyword">K</span>, used <span class="number">655</span><span class="keyword">K</span> [<span class="number">0x000000076b500000</span>, <span class="number">0x0000000770a00000</span>, <span class="number">0x00000007c0000000</span>)</div><div class="line">  eden space <span class="number">65536</span><span class="keyword">K</span>, <span class="number">1</span>% used [<span class="number">0x000000076b500000</span>,<span class="number">0x000000076b5a3ee8</span>,<span class="number">0x000000076f500000</span>)</div><div class="line">  from space <span class="number">10752</span><span class="keyword">K</span>, <span class="number">0</span>% used [<span class="number">0x000000076f500000</span>,<span class="number">0x000000076f500000</span>,<span class="number">0x000000076ff80000</span>)</div><div class="line">  to   space <span class="number">10752</span><span class="keyword">K</span>, <span class="number">0</span>% used [<span class="number">0x000000076ff80000</span>,<span class="number">0x000000076ff80000</span>,<span class="number">0x0000000770a00000</span>)</div><div class="line"> ParOldGen       total <span class="number">175104</span><span class="keyword">K</span>, used <span class="number">609</span><span class="keyword">K</span> [<span class="number">0x00000006c1e00000</span>, <span class="number">0x00000006cc900000</span>, <span class="number">0x000000076b500000</span>)</div><div class="line">  object space <span class="number">175104</span><span class="keyword">K</span>, <span class="number">0</span>% used [<span class="number">0x00000006c1e00000</span>,<span class="number">0x00000006c1e987a8</span>,<span class="number">0x00000006cc900000</span>)</div><div class="line"> Metaspace       used <span class="number">3176</span><span class="keyword">K</span>, capacity <span class="number">4494</span><span class="keyword">K</span>, committed <span class="number">4864</span><span class="keyword">K</span>, reserved <span class="number">1056768</span><span class="keyword">K</span></div><div class="line">  class space    used <span class="number">346</span><span class="keyword">K</span>, capacity <span class="number">386</span><span class="keyword">K</span>, committed <span class="number">512</span><span class="keyword">K</span>, reserved <span class="number">1048576</span><span class="keyword">K</span></div></pre></td></tr></table></figure></p>
<p>见证奇迹的时候到，[ParOldGen: 65544K-&gt;609K(175104K)]，竟然被回收了！这是为什么？当创建bytes对象的时候，那是因为当我们创建bytes对象的时候，局部变量表中当然有bytes的引用，哪怕我们没有使用，但GC roots依然存在着和bytes对象的关联。根据test2和代码test3，我们大概可以猜到如果不操作局部变量表，那么GC roots依然会保留，所以test2依然没有回收，但是到了test3，就回收了。好吧，再来一个无用的测试，我们手动赋值为null看看结果。<br><br><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TestMain</span> &#123;</div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * -verbose:GC</div><div class="line">	 * -XX:+PrintGCDetails</div><div class="line">	 * @param args</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">		<span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">64</span> * <span class="number">1024</span> * <span class="number">1024</span>];</div><div class="line">		<span class="comment">//do something</span></div><div class="line">		bytes = <span class="literal">null</span>;</div><div class="line">		System.gc();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>其实都能想到，果然被gc干掉了……当然这只是一个实验，总结性的话就不说了，反正我也说不来，不过实践出真理！</p>
]]></content>
      
        <categories>
            
            <category> Java二三事 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
            <tag> Jvm </tag>
            
            <tag> 对象 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[黑车司机发车器Java版]]></title>
      <url>http://justdoitlee.github.io/2017/02/18/%E9%BB%91%E8%BD%A6%E5%8F%B8%E6%9C%BA%E5%8F%91%E8%BD%A6%E5%99%A8Java%E7%89%88/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>既然是发的黑车，磁力链接那套就不必仔细研究了，<br>磁力链接其实类似于这样（下面的这个是真车）：</p>
<blockquote>
<p>magnet:?xt=urn:btih:3AEA94481B0A406C66083F14C6F42635C14562C2</p>
</blockquote>
<a id="more"></a>
<p>说白了就是随机填充 40 个字母或数字，不过有一定几率会发出真车。</p>
<p> <img src="https://ooo.0o0.ooo/2016/12/25/585f760101362.png " width="300" height="300" alt="图片名称" align="center"></p>
<hr>

<p>代码实现：<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"> <span class="keyword">public</span> <span class="keyword">class</span> OldDriver &#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</div><div class="line">		java.util.Scanner input = <span class="keyword">new</span> java.util.Scanner(System.in);</div><div class="line">		System.out.<span class="built_in">println</span>(<span class="string">"黑车司机虚假磁力链接发车器"</span>);</div><div class="line">		System.out.<span class="built_in">print</span>(<span class="string">"输入需要发的黑车数量："</span>);</div><div class="line">		<span class="keyword">int</span> ljs = input.nextInt();</div><div class="line">		<span class="built_in">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=ljs;i++)&#123;</div><div class="line">			System.out.<span class="built_in">println</span>(<span class="string">"magnet:?xt=urn:btih:"</span>+CLSC());</div><div class="line"><span class="comment">/*调用 CLSC 函数，获取 40 个随机生成的字符串（CLSC指 磁力生成）*/</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> CLSC()&#123;</div><div class="line">		<span class="keyword">String</span> cllj = <span class="string">""</span>;</div><div class="line">		<span class="keyword">String</span> randomchar;</div><div class="line">		<span class="keyword">String</span> chars = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"</span>;</div><div class="line">		<span class="built_in">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">40</span>;i++)&#123;</div><div class="line">			<span class="keyword">int</span> RandomNumber = (<span class="keyword">int</span>)(Math.<span class="built_in">random</span>()*<span class="number">35</span>);</div><div class="line"><span class="comment">/*随机生成一个范围在 [0,35] 的数字*/</span></div><div class="line">			randomchar = <span class="string">""</span> + chars.charAt(RandomNumber);</div><div class="line"><span class="comment">/*随机选择一个字符，字符位置由上一步随机数字决定*/</span></div><div class="line">			cllj = cllj+randomchar;</div><div class="line"><span class="comment">/*将随机字符附到 cllj 字符串上，重复 40 次*/</span></div><div class="line">		&#125;</div><div class="line">		<span class="built_in">return</span> cllj;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>运行效果：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">黑车司机虚假磁力链接发车器</div><div class="line">输入需要发的黑车数量：<span class="number">5</span></div><div class="line"><span class="string">magnet:</span>?xt=urn:<span class="string">btih:</span><span class="number">126</span>XT8JCPZ6ZWV1Q77OSOAD2P2UOWOAZEIGNN0UH</div><div class="line"><span class="string">magnet:</span>?xt=urn:<span class="string">btih:</span>VEKIXXTDDC6STSZN2IS1IQSW6RHJ6ZGC7NEGYIAJ</div><div class="line"><span class="string">magnet:</span>?xt=urn:<span class="string">btih:</span>G8Z7O3AIGY2C1PRRNJEZ6Q1VY3HGZQ34E2MOQUWR</div><div class="line"><span class="string">magnet:</span>?xt=urn:<span class="string">btih:</span>MRXYGZUFONLDPN5G4E5EDCWMWLI00PB8ZVK6IIKQ</div><div class="line"><span class="string">magnet:</span>?xt=urn:<span class="string">btih:</span><span class="number">3</span>WQ1IYXW0MD3Z32DT80NCJBLTAJ0FC837TB2HW2M</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Java二三事 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
            <tag> 黑车 </tag>
            
            <tag> 种子 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello Hexo]]></title>
      <url>http://justdoitlee.github.io/2017/02/17/Hello-Hexo/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>本博客由 Hexo 强力驱动，托管于 Github ，支持 https 。</p>
<a id="more"></a>
<p>早就有自己建博客的念头了，先前在把csdn和简书作为博客，写了有大半年吧，后来学生计划买了个云服务器，用ghost搭建了一个博客，但是太简洁了！！ 于是昨天天花了大半天的时间终于搞好了这个博客。</p>
<p>之后会将简书上的文章搬运过来，Markdown 语法的文章复制一下就行，富文本写的，还得转成 Markdown 语法。（csdn的Markdown复制十分好用！）</p>
<p>博客与csdn将同步更新，两边的留言都会认真回复，反正有(mei)的(you)是(nv)时(peng)间(you)</p>
<p> <img src="http://oa0thinbz.bkt.clouddn.com/0.jpeg " width="350" height="320" alt="图片名称" align="center"></p>
]]></content>
      
        <categories>
            
            <category> 蜜汁开始 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 迁移 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
